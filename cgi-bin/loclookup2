#! /usr/bin/perl
#
# Gwen's Script for Look-up and Conversion of Levels of Concern



# ***************
# *** modules ***
# ***************

use strict;
use warnings;
use CGI;

# ***********************
# *** dump it all out ***
# ***********************

my $q = CGI->new;

print $q->header('text/html');

# ***********************
# Assign chemical name and value inputs to arrays
# ***********************


$number = 0;
for ($j = 1; $j <= 8; $j++) {
         $varname="chem$j";
         $varname2="report$j";

         if ($q->param($varname) ne "") {
                 $number++;      # increment $number by 1
                 $chem[$number]=$q->param($varname);
                 if ($q->param($varname2) ne "") { 
				$report[$number]=$q->param($varname2); 
				$origrep[$number]=$q->param($varname2);
				}    
         }
}          


# ***********************
# Match chemical names to CAS numbers
# ***********************

open (CONTENT, "/usr/home/gwen/public_html/cgi-bin/datatables/synonyms.txt");
	$sj = 0;
        while ( $line = <CONTENT> ) {
		chop $line;
		
		@variables=split /\t/, $line;
		
		for ($j = 1; $j <= $number; $j++) {
			if (&cleanup($chem[$j]) eq &cleanup($variables[0])) {  #compare cleaned-up names
				$cas[$j] = $variables[1]; 
				$MW[$j] = $variables[2];
				}
		}	
	
	
	
	}


close(CONTENT);


# ***********************
# Convert reported values to ug/m3
# ***********************

if ($q->param('inunits') eq "ppb") {
	&convertppb2ugm3(@report);
}

elsif ($q->param('inunits') eq "ppbv") {
	@report = &convertppbv2ugm3(@report);
}


# ***********************
# Look up chemicals in North Carolina Standards
# Convert standards from mg/m3 to ug/m3
# ***********************

open (CONTENT, "/usr/home/gwen/public_html/cgi-bin/datatables/ncstds.txt");
	$sj = 0;
        while ( $line = <CONTENT> ) {
		chop $line;
		
		@variables=split /\t/, $line;
		
		for ($j = 1; $j <= $number; $j++) {
			if ($cas[$j] eq $variables[1]) {
				$ncann[$j] = $variables[2]*1000; 
				$nc24[$j] = $variables[3]*1000;
				$nc1a[$j] = $variables[4]*1000; 
				$nc1b[$j] = $variables[5]*1000;
				
				}
			
		}	
	
	
	
	}


close(CONTENT);


# ***********************
# Look up chemicals in Texas Effects Screening Levels
# In ug/m3 
# ***********************

open (CONTENT, "/usr/home/gwen/public_html/cgi-bin/datatables/tesl.txt");
	$sj = 0;
        while ( $line = <CONTENT> ) {
		chop $line;
		
		@variables=split /\t/, $line;
		
		for ($j = 1; $j <= $number; $j++) {
			if ($cas[$j] eq $variables[1]) {
				$tshort[$j] = $variables[2]; 
				$tlong[$j] = $variables[4];
								
				}
			
		}	
	
	
	
	}


close(CONTENT);                 


# ***********************
# Look up chemicals in Region 6 Screening Levels
# ***********************

open (CONTENT, "/usr/home/gwen/public_html/cgi-bin/datatables/r6sls.txt");
	$sj = 0;
        while ( $line = <CONTENT> ) {
		chop $line;
		
		@variables=split /\t/, $line;
		
		for ($j = 1; $j <= $number; $j++) {
			if ($cas[$j] eq $variables[1]) {
				$r6sl[$j] = $variables[2]; 
							
				}
			
		}	
	
	
	
	}


close(CONTENT);


# ***********************
# Look up chemicals in ATSDR Minimum Risk Levels
# Convert standards from ppm to ppb and from ppb to ug/m3
# ***********************

open (CONTENT, "/usr/home/gwen/public_html/cgi-bin/datatables/ATSDRMRLs.txt");
	$sj = 0;
       while ( $line = <CONTENT> ) {
		chop $line;
		
		@variables=split /\t/, $line;
		
		for ($j = 1; $j <= $number; $j++) {
			if ($cas[$j] eq $variables[1]) {
				$atsdrac[$j] = $variables[2]*1000;	#converts values from ppm to ppb 
				$atsdrint[$j] = $variables[3]*1000; 
				$atsdrchr[$j] = $variables[4]*1000; 			
				}
			
		}	
	
	
	
	}

	&convertppb2ugm3(@atsdrac);
	&convertppb2ugm3(@atsdrint);
	&convertppb2ugm3(@atsdrchr);

close(CONTENT);


# ***********************
# Look up chemicals in Louisiana Standards
# ***********************
                      
open (CONTENT, "/usr/home/gwen/public_html/cgi-bin/datatables/lastds.txt");
	$sj = 0;
        while ( $line = <CONTENT> ) {
		chop $line;
		
		@variables=split /\t/, $line;
		
		for ($j = 1; $j <= $number; $j++) {
			if ($cas[$j] eq $variables[1]) {
				$la8[$j] = $variables[2]; 
				$la24[$j] = $variables[3];
								
				}
			
		}	
	
	
	
	}


close(CONTENT);                 



# ***********************
# Convert Levels into user-specified output units
# ***********************


if ($q->param('outunits') eq "ppb") {
	&convert2ppb(@report);
	&convert2ppb(@la8);
	&convert2ppb(@la24);
	&convert2ppb(@tshort);
	&convert2ppb(@tlong);
	&convert2ppb(@r6sl);
	&convert2ppb(@atsdrac);
	&convert2ppb(@atsdrint);
	&convert2ppb(@atsdrchr);
	&convert2ppb(@ncann);
	&convert2ppb(@nc24);
	&convert2ppb(@nc1a);
	&convert2ppb(@nc1b);
	
}

elsif ($q->param('outunits') eq "ppbv") {
	@report = &convert2ppbv(@report);
	@la8 = &convert2ppbv(@la8);
	@la24 = &convert2ppbv(@la24);
	@tshort = &convert2ppbv(@tshort);
	@tlong = &convert2ppbv(@tlong);
	@r6sl = &convert2ppbv(@r6sl);
	@atsdrac = &convert2ppbv(@atsdrac);
	@atsdrint = &convert2ppbv(@atsdrint);
	@atsdrchr = &convert2ppbv(@atsdrchr);
	@ncann = &convert2ppbv(@ncann);
	@nc24 = &convert2ppbv(@nc24);
	@nc1a = &convert2ppbv(@nc1a);
	@nc1b = &convert2ppbv(@nc1b);
}



# ****************************
# Generate Report
# ****************************

	
# *************************
# Check for null arrays 
# *************************

      $sumrep = 0;
      for ($j = 1; $j <= $number; $j++) {$sumrep = $sumrep + $report[$j];}

      $sumla8 = 0;
      for ($j = 1; $j <= $number; $j++) {$sumla8 = $sumla8 + $la8[$j];}

	$sumla24 = 0;
      for ($j = 1; $j <= $number; $j++) {$sumla24 = $sumla24 + $la24[$j];}

      $sumtshort = 0;
      for ($j = 1; $j <= $number; $j++) {$sumtshort = $sumtshort + $tshort[$j];}

      $sumtlong = 0;
      for ($j = 1; $j <= $number; $j++) {$sumtlong = $sumtlong + $tlong[$j];}

      $sumr6sl = 0;
      for ($j = 1; $j <= $number; $j++) {$sumr6sl = $sumr6sl + $r6sl[$j];}

      $sumaac = 0;
      for ($j = 1; $j <= $number; $j++) {$sumaac = $sumaac + $atsdrac[$j];}

      $sumaint = 0;
      for ($j = 1; $j <= $number; $j++) {$sumaint = $sumaint + $atsdrint[$j];}

      $sumachr = 0;
      for ($j = 1; $j <= $number; $j++) {$sumachr = $sumachr + $atsdrchr[$j];}

      $sumncann = 0;
      for ($j = 1; $j <= $number; $j++) {$sumncann = $sumncann + $ncann[$j];}

      $sumnc24 = 0;
      for ($j = 1; $j <= $number; $j++) {$sumnc24 = $sumnc24 + $nc24[$j];}

      $sumnc1a = 0;
      for ($j = 1; $j <= $number; $j++) {$sumnc1a = $sumnc1a + $nc1a[$j];}

      $sumnc1b = 0;
      for ($j = 1; $j <= $number; $j++) {$sumnc1b = $sumnc1b + $nc1b[$j];}

# *****************************
# Show Regulatory Standards Only
# *****************************

	if (($q->param('laonly') eq "on") && ($q->param('nconly') ne "on")) { 
	      $sumtshort = 0;
	      $sumtlong = 0;
	      $sumr6sl = 0;
	      $sumaac = 0;
	      $sumaint = 0;
	      $sumachr = 0;
	      $sumncann = 0;
	      $sumnc24 = 0;
	      $sumnc1a = 0;
      	$sumnc1b = 0;
		}   

	if (($q->param('nconly') eq "on") && ($q->param('laonly') ne "on")) { 
	      $sumtshort = 0;
	      $sumtlong = 0;
	      $sumr6sl = 0;
	      $sumaac = 0;
	      $sumaint = 0;
	      $sumachr = 0;
	      $sumla8 = 0;
	      $sumla24 = 0;
		}   

	if (($q->param('nconly') eq "on") && ($q->param('laonly') eq "on")) { 
	      $sumtshort = 0;
	      $sumtlong = 0;
	      $sumr6sl = 0;
	      $sumaac = 0;
	      $sumaint = 0;
	      $sumachr = 0;
		}   

# *****************************
# Compare Levels of Concern to Reported Values
# *****************************

         for ($j = 1; $j <= $number; $j++) {
                 if (($r6sl[$j] < $report[$j]) && ($r6sl[$j] ne "") && ($r6sl[$j] ne 0)) {
                         $redflagr6[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagr6[$j] = "";
                 }


		    if (($tshort[$j] < $report[$j]) && ($tshort[$j] ne "") && ($tshort[$j] ne 0)) {
                         $redflagts[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagts[$j] = "";
                 }


		    if (($tlong[$j] < $report[$j]) && ($tlong[$j] ne "") && ($tlong[$j] ne 0)) {
                         $redflagtl[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagtl[$j] = "";
                 }


		    if (($la8[$j] < $report[$j]) && ($la8[$j] ne "") && ($la8[$j] ne 0)) {
                         $redflagl8[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagl8[$j] = "";
                 }


		    if (($la24[$j] < $report[$j]) && ($la24[$j] ne "") && ($la24[$j] ne 0)) {
                         $redflagl24[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagl24[$j] = "";
                 }


		    if (($ncann[$j] < $report[$j]) && ($ncann[$j] ne "") && ($ncann[$j] ne 0)) {
                         $redflagnca[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagnca[$j] = "";
                 }


		    if (($nc24[$j] < $report[$j]) && ($nc24[$j] ne "") && ($nc24[$j] ne 0)) {
                         $redflagnc24[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagnc24[$j] = "";
                 }


		    if (($nc1a[$j] < $report[$j]) && ($nc1a[$j] ne "") && ($nc1a[$j] ne 0)) {
                         $redflagnc1a[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagnc1a[$j] = "";
                 }


		    if (($nc1b[$j] < $report[$j]) && ($nc1b[$j] ne "") && ($nc1b[$j] ne 0)) {
                         $redflagnc1b[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagnc1b[$j] = "";
                 }


		    if (($atsdrac[$j] < $report[$j]) && ($atsdrac[$j] ne "") && ($atsdrac[$j] ne 0)) {
                         $redflagaa[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagaa[$j] = "";
                 }


		    if (($atsdrint[$j] < $report[$j]) && ($atsdrint[$j] ne "") && ($atsdrint[$j] ne 0)) {
                         $redflagai[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagai[$j] = "";
                 }


		    if (($atsdrchr[$j] < $report[$j]) && ($atsdrchr[$j] ne "") && ($atsdrchr[$j] ne 0)) {
                         $redflagac[$j] = "bgcolor=#FFCC99";
                 }
                 else {
                         $redflagac[$j] = "";
                 }


         }

# *****************************
# Check for arrays with exceedances
# *****************************

         for ($j = 1; $j <= $number; $j++) {
               if ($redflagr6[$j] ne "") {$exceedr6 = 1;}
                 
		   if ($redflagts[$j] ne "") {$exceedts = 1;}

		   if ($redflagtl[$j] ne "") {$exceedtl = 1;}

		   if ($redflagl8[$j] ne "") {$exceedl8 = 1;}

		    if ($redflagl24[$j] ne "") {$exceedl24 = 1;}

		    if ($redflagnca[$j] ne "") {$exceednca = 1;}

		    if ($redflagnc24[$j] ne "") {$exceednc24 = 1;}

		    if ($redflagnc1a[$j] ne "") {$exceednc1a = 1;}

		    if ($redflagnc1b[$j] ne "") {$exceednc1b = 1;}

		    if ($redflagaa[$j] ne "") {$exceedaa = 1;}

		    if ($redflagai[$j] ne "") {$exceedai = 1;}

		    if ($redflagac[$j] ne "") {$exceedac = 1;}

         }
  

# *****************************
# Generate Summary Report
# *****************************
    

print "<font size = +3><b><center>";
print "Levels of Concern Report</font>";
if ($q->param('tablename') ne "") {
	print "<p><font size=+2><i>for $q->param('tablename')";
	print "</center></i></b></font>";
	print "<font size = +2><b><i><center>";
	print "$q->param('tablename2')";
	print "</center></i></b></font>";
	}

print "<p><br><hr noshade width=65% align=center><br>";


# ***************************
# Do really short summary
# ***************************

if ($q->param('brief') eq "on") {

for ($j = 1; $j <= $number; $j++) {

#  ****************************
#  For LA as reference standard
#  ****************************

	if ($q->param('reflevel') eq "Louisiana Ambient Air Standards") {
	  if (($redflagl24[$j] ne "") || ($redflagl8[$j] ne "")) {

		print "<p>";
		print "<font size = +3><b><center>$chem[$j]</center></b></font>";
	
		print "<table border=1 width=60% align=center>";
		if ($redflagl24[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$la24[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}
			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The Louisiana Annual Ambient Air Standard </font>";
			print "<p><font size = +3><b>";
			print &signif($la24[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}

		if ($redflagl8[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$la8[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}
			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The Louisiana 8-Hour Ambient Air Standard </font>";
			print "<p><font size = +3><b>";
			print &signif($la8[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}

		print "</table><br><br>";

		}
	
	  else {
		print "<p><center><font size=+2>Your results for <b>$chem[$j]</b> do not exceed";
		print " Louisiana Ambient Air Standards.</font></center>";
		}
	  }

#  ****************************
#  For TX as reference standard
#  ****************************

	if ($q->param('reflevel') eq "Texas Effects Screening Levels") {
	  if (($redflagts[$j] ne "") || ($redflagtl[$j] ne "")) {

		print "<p>";
		print "<font size = +3><b><center>$chem[$j]</center></b></font>";
	
		print "<table border=1 width=60% align=center>";
		if ($redflagts[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$tshort[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}
			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The <b>Short Term</b> (1-hr) Texas Effects Screening Level </font>";
			print "<p><font size = +3><b>";
			print &signif($tshort[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}

		if ($redflagtl[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$tlong[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}
			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The <b>Long-Term</b> Texas Effects Screening Level </font>";
			print "<p><font size = +3><b>";
			print &signif($tlong[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}

		print "</table><br><br>";

		}
	
	  else {
		print "<p><center><font size=+2>Your results for <b>$chem[$j]</b> do not exceed";
		print " Texas Effects Screening Levels.</font></center>";
		}
	  }



#  ****************************
#  For ATSDR as reference standard
#  ****************************

	if ($q->param('reflevel') eq "ATSDR Minimal Risk Levels") {
	  if (($redflagaa[$j] ne "") || ($redflagai[$j] ne "") || ($redflagac[$j] ne "")) {

		print "<p>";
		print "<font size = +3><b><center>$chem[$j]</center></b></font>";
	
		print "<table border=1 width=60% align=center>";
		if ($redflagaa[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$atsdrac[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}
			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The <b>Acute</b> (<2 week) ATSDR Minimal Risk Level </font>";
			print "<p><font size = +3><b>";
			print &signif($atsdrac[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}

		if ($redflagai[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$atsdrint[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}
			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The <b>Intermediate</b> (2 wks - 1 yr) ATSDR Minimal Risk";
			print " Level </font>";
			print "<p><font size = +3><b>";
			print &signif($atsdrint[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}

		if ($redflagac[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$atsdrchr[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}

			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The <b>Chronic</b> (> 1 yr) ATSDR Minimal Risk";
			print " Level </font>";
			print "<p><font size = +3><b>";
			print &signif($atsdrchr[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}		

		
		print "</table><br><br>";

		}
	
	  else {
		print "<p><center><font size=+2>Your results for <b>$chem[$j]</b> do not exceed";
		print " ATSDR Minimal Risk Levels.</font></center>";
		}
	  }


#  ****************************
#  For NC as reference standard
#  ****************************

	if ($q->param('reflevel') eq "North Carolina Ambient Air Standards") {
	  if (($redflagnca[$j] ne "") || ($redflagnc24[$j] ne "") || ($redflagnc1a[$j] ne "") || ($redflagnc1b[$j] ne "")) {

		print "<p>";
		print "<font size = +3><b><center>$chem[$j]</center></b></font>";
	
		print "<table border=1 width=60% align=center>";
		if ($redflagnca[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$ncann[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}
			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The North Carolina Annual Standard </font>";
			print "<p><font size = +3><b>";
			print &signif($ncann[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}

		if ($redflagnc24[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$nc24[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}
			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The North Carolina 24-Hour Standard </font>";
			print "<p><font size = +3><b>";
			print &signif($nc24[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}

		if ($redflagnc1a[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$nc1a[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}

			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The North Carolina 1-Hour Standard </font>";
			print "<p><font size = +3><b>";
			print &signif($nc1a[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}		


		if ($redflagnc1b[$j] ne "") {
			print "<tr>";
			print "<td width=35% valign=top align=center>";
			print "<br><font size=+1>Your reported value</font>";
			print "<p><font size = +3><b>";
			print &signif($report[$j]);
			print " $q->param('outunits') </b></font>";
			print "</td>";

			print "<td width=30% align=center>";
			$compare = $report[$j]/$nc1b[$j];
			if ($compare <= 1.8) {
				print "<font size=+2><b> exceeds </b></font>";
				}

			else {
				$notimes = int($compare);
				$dec = $compare - $notimes;
			
				if ($dec < .2) 	{
					print "<font size=+3> is <i>about</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				if (($dec >= .2) && ($dec <= .8)) {
					print "<font size=+3> is <i>over</i><br>";
					print "<b> $notimes</b><br> times ";}
				if ($dec > .8)	{
					$notimes = $notimes + 1;
					print "<font size=+3> is <i>nearly</i><br>";
					print "<b> $notimes</b><br> times ";
					}
				}
			print "</td>";

			print "<td width=35% valign=top align=center>";
			print "<font size=+1>The North Carolina 1-Hour Standard </font>";
			print "<p><font size = +3><b>";
			print &signif($nc1b[$j]);
			print " $q->param('outunits')</b></font>";
			print "</td>";
			print "</tr>";

			}		

		
		print "</table><br><br>";

		}
	
	  else {
		print "<p><center><font size=+2>Your results for <b>$chem[$j]</b> do not exceed";
		print " North Carolina Ambient Air Standards.</font></center>";
		}

	  }

#  ****************************
#  For Region 6 as reference standard
#  ****************************

	if ($q->param('reflevel') eq "EPA Region 6 Screening Levels") {

	  if ($redflagr6[$j] ne "") {

		print "<p>";
		print "<font size = +3><b><center>$chem[$j]</center></b></font>";
	
		print "<table border=1 width=60% align=center>";
		print "<tr>";
		print "<td width=35% valign=top align=center>";
		print "<br><font size=+1>Your reported value</font>";
		print "<p><font size = +3><b>";
		print &signif($report[$j]);
		print " $q->param('outunits') </b></font>";
		print "</td>";

		print "<td width=30% align=center>";
		$compare = $report[$j]/$r6sl[$j];
		if ($compare <= 1.8) {
			print "<font size=+2><b> exceeds </b></font>";
			}
		else {
			$notimes = int($compare);
			$dec = $compare - $notimes;
			
			if ($dec < .2) 	{
				print "<font size=+3> is <i>about</i><br>";
				print "<b> $notimes</b><br> times ";
				}
			if (($dec >= .2) && ($dec <= .8)) {
				print "<font size=+3> is <i>over</i><br>";
				print "<b> $notimes</b><br> times ";}
			if ($dec > .8)	{
				$notimes = $notimes + 1;
				print "<font size=+3> is <i>nearly</i><br>";
				print "<b> $notimes</b><br> times ";
				}
			}
		print "</td>";

		print "<td width=35% valign=top align=center>";
		print "<font size=+1>The EPA Region 6 Screening Level </font>";
		print "<p><font size = +3><b>";
		print &signif($r6sl[$j]);
		print " $q->param('outunits')</b></font>";
		print "</td>";
		print "</tr>";


		print "</table><br><br>";

		}
	
	  else {
		print "<p><center><font size=+2>Your results for <b>$chem[$j]</b> do not exceed";
		print " EPA Region 6 Screening Levels.</font></center>";
		}
	  }


	}


print "<p><br><hr noshade width=65% align=center><br>";

}


# ***************************
# Do medium length summary
# ***************************

if ($q->param('summary') eq "on") {

for ($j = 1; $j <= $number; $j++) {

	print "<p>";
	print "<font size = +1><b><u>$chem[$j]</u></b></font>";

# Do error messages

	if ($chem[$j] ne "" && $cas[$j] eq "") {  
		print "<br>\"$chem[$j]\" was not found.  Either there are no screening levels 
			available for this chemical, or the spelling of the chemical name is 
			incorrect.";
		$error[$j]=1;
		}

	if ($q->param('inunits') eq "ppbv") {
		if ($cas[$j] ne "" && $MW[$j] eq "") {  
			print "<br>Conversion from ppb <i>by volume</i> is not available for 
			$chem[$j].  For better results, enter values in ppb or ug/m3";
			$error[$j]=1;
			}
		}


	if ($q->param('outunits') eq "ppbv") {
		if ($cas[$j] ne "" && $MW[$j] eq "") {  
			print "<br>Results in ppb <i>by volume</i> cannot be provided for 
			$chem[$j].  Select ppb or ug/m3 as your output units instead.";
			$error[$j]=1;
			}
		}

  unless ($error[$j] eq 1) {

	print "<br><font size=+1>Your reported value of <b>$origrep[$j] $q->param('inunits')</b>";
	if ($q->param('inunits') ne $q->param('outunits')) {
		print "  or  <b>";
		print &signif($report[$j]); 
		print "$q->param('outunits')</b>";
		}
	         
	unless (($q->param('laonly') eq "on") || ($q->param('nconly') eq "on")) { 
		if ($redflagr6[$j] ne "") {
			print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
			print "<table border=1 width=85% cellpadding=3>";
			print "<tr><td><font size=+1><b>EPA Region 6 Screening Level</b> </font>";
			print "<br><font size=-1>  According to Region 6 of the US EPA,";
			print " <br>  no health effects are thought";
			print " to occur below this level.</font></td>";
			print "<td valign=top align=right><b><font size=+1>  ";
			print &signif($r6sl[$j]);
			print " $q->param('outunits') </font></b></td></tr>";
			$noex[$j] = 1;
			}
                 
		if ($redflagts[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>Texas Short-Term Screening Level</b></font>";
			print "<br><font size=-1>  According to the Texas Natural Resource Conservation";
			print " Commission, <br>  no health effects are thought";
			print " to occur below this level.<br>\"Short-term\" levels refer to the average";
			print " exposure level during <b>one hour</b>.</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($tshort[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}

		if ($redflagtl[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>Texas Long-Term Screening Level</b></font>";
			print "<br><font size=-1>  According to the Texas Natural Resource Conservation";
			print " Commission, <br>  no health effects are thought";
			print " to occur below this level.<br>\"Long-term\" levels refer to the average";
			print " exposure level during a <b>year</b> \(24 hours for benzene and ethylene dichloride\).</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($tlong[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}
		}


	unless (($q->param('nconly') eq "on") && ($q->param('laonly') ne "on")) { 

		if ($redflagl8[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>Louisiana 8-Hour Ambient Air Standard</b></font>";
			print "<br><font size=-1>  Concentrations above this level are illegal in";
			print " Louisiana.<br>  This level refers to the average level over an <b>8-hour</b>";
			print " period.</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($la8[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}

		if ($redflagl24[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>Louisiana Annual Ambient Air Standard</b></font>";
			print "<br><font size=-1>  Concentrations above this level are illegal in";
			print " Louisiana.<br>  This level refers to the average level over a ";
			print " period of <b>one year</b>.</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($la24[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}
		}

	unless (($q->param('laonly') eq "on") && ($q->param('nconly') ne "on")) { 

		if ($redflagnca[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>North Carolina Annual Ambient Air Standard</b></font>";
			print "<br><font size=-1>  Concentrations above this level are illegal in";
			print " North Carolina.<br>  This level refers to the average level over a ";
			print "period of <b>one year</b>.</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($ncann[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}

		if ($redflagnc24[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>North Carolina 24-Hour Ambient Air Standard</b></font>";
			print "<br><font size=-1>  Concentrations above this level are illegal in";
			print " North Carolina.<br>  This level refers to the average level over a ";
			print "<b>24-hour</b> period.</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($nc24[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}

		if (($redflagnc1a[$j] ne "") || ($redflagnc1b[$j] ne "")) {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>North Carolina 1-Hour Ambient Air Standard</b></font>";
			print "<br><font size=-1>  Concentrations above this level are illegal in";
			print " North Carolina.<br>  This level refers to the average level over a ";
			print "<b>one hour</b> period.</font></td>";
			if ($redflagnc1a[$j] ne "") {
				print "<td valign=top align=right><b><font size=+1>";
				print &signif($nc1a[$j]);
				}
			if ($redflagnc1b[$j] ne "") {
				print "<td valign=top align=right><b><font size=+1>";
				print &signif($nc1b[$j]);
				}
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}
		}

	
	unless (($q->param('laonly') eq "on") || ($q->param('nconly') eq "on")) { 

		if ($redflagaa[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>ATSDR Acute Minimal Risk Level</b></font>";
			print "<br><font size=-1>  According to the American Toxic Substances and Disease";
			print " Registry, <br>  there is no appreciable";
			print " risk of <i>non-cancer</i> health effects from";
			print " being exposed to concentrations up to this level over periods of ";
			print "<b>up to 2 weeks</b>.</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($atsdrac[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}

		if ($redflagai[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>ATSDR Intermediate Minimal Risk Level</b></font>";
			print "<br><font size=-1>  According to the American Toxic Substances and Disease";
			print " Registry, <br>  there is no appreciable";
			print " risk of <i>non-cancer</i> health effects from";
			print " being exposed to concentrations up to this level over periods of ";
			print "<b> between 2 weeks and one year</b>.</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($atsdrint[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}

		if ($redflagac[$j] ne "") {
			unless ($noex[$j] eq 1) {
				print "  is <b>ABOVE</b> the following Levels of Concern:</font><br><br>"; 
				print "<table border=1 width=85% cellpadding=3>";
				}
			print "<tr><td><font size=+1><b>ATSDR Chronic Minimal Risk Level</b></font>";
			print "<br><font size=-1>  According to the American Toxic Substances and Disease";
			print " Registry, <br>  there is no appreciable";
			print " risk of non-cancer health effects from";
			print " being exposed to concentrations up to this level over periods ";
			print "<b>longer than one year</b>.</font></td>";
			print "<td valign=top align=right><b><font size=+1>";
			print &signif($atsdrchr[$j]);
			print " $q->param('outunits')</font></b></td></tr>";
			$noex[$j] = 1;
			}
		}

	print "</table>";

	unless ($noex[$j] eq 1) {
		print "  is <b>NOT ABOVE</b> any of the Levels of Concern.</font>";
		}
	
	print "<br>";

	  }

	}

print "<p><br><br>";


print "<p><br><hr noshade width=65% align=center><br>";

}



# *****************************
# Generate Table
# *****************************

if ($q->param('full') eq "on") {
    

print "<font size = +2><b><center>Levels of Concern </b></font>";

print "<br><font size = +1><b>in $q->param(outunits)</b></font><br>";

print "<table border=1 size=95%>";
print "<tr><td><center><b>Chemical</b></center></td>";

	if ($sumrep ne 0) {print "<td><center><b>Reported Level</b></center></td>";}

	if ($sumr6sl ne 0) {print "<td><center><b>EPA Region 6 Screening Level</b></center></td>";}

	if ($sumtshort ne 0) {print "<td><center><b>TX ESL - short term</b></center></td>";}

	if ($sumtlong ne 0) {print "<td><center><b>TX ESL - long term</b></center></td>";}
	
	if ($sumla8 ne 0) {print "<td><center><b>LA 8-hr Std.</b></center></td>";}

	if ($sumla24 ne 0) {print "<td><center><b>LA Annual Std.</b></center></td>";}

	if ($sumncann ne 0) {print "<td><center><b>NC Annual Std.</b></center></td>";}

	if ($sumnc24 ne 0) {print "<td><center><b>NC 24-hr Std.</b></center></td>";}
		
	if ($sumnc1a ne 0) {print "<td><center><b>NC 1-hr Std. (systemic toxicants)</b></center></td>";}
	
	if ($sumnc1b ne 0) {print "<td><center><b>NC 1-hr Std. (irritants)</b></center></td>";}

	if ($sumaac ne 0)  {print "<td><center><b>ATSDR MRL - Acute</b></center></td>";}

	if ($sumaint ne 0)  {print "<td><center><b>ATSDR MRL - Intermediate</b></center></td>";}

	if ($sumachr ne 0)  {print "<td><center><b>ATSDR MRL - Chronic</b></center></td>";}
		
print "</tr>";



for ($j = 1; $j <= $number; $j++) {

  unless ($error[$j] eq 1) {
	print "<tr><td><b>$chem[$j]</b></td>";

	if ($sumrep ne 0) {
		if ($noex[$j] eq 1) {
			print "<td bgcolor = #FF9966><center><b>";
			print &signif($report[$j]);
			print "</b></center></td>"; 
			}
		else {
			print "<td><center><b>";
			print &signif($report[$j]);
			print "</b></center></td>"; 
			}
		}


	if ($sumr6sl ne 0) {
		if (($r6sl[$j] ne 0) && ($r6sl[$j] ne "")) {
			print "<td $redflagr6[$j]><center>";
			print &signif($r6sl[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumtshort ne 0) {
		if (($tshort[$j] ne 0) && ($tshort[$j] ne "")) {
			print "<td $redflagts[$j]><center>";
			print &signif($tshort[$j]);
			print "</center></td>"; 
			}	
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumtlong ne 0) {
		if (($tlong[$j] ne 0) && ($tlong[$j] ne "")) {
			print "<td $redflagtl[$j]><center>";
			print &signif($tlong[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumla8 ne 0) {
		if (($la8[$j] ne 0) && ($la8[$j] ne "")) {
			print "<td $redflagl8[$j]><center>";
			print &signif($la8[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumla24 ne 0) {
		if (($la24[$j] ne 0) && ($la24[$j] ne "")) {
			print "<td $redflagl24[$j]><center>";
			print &signif($la24[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumncann ne 0) {
		if (($ncann[$j] ne 0) && ($ncann[$j] ne "")) {
			print "<td $redflagnca[$j]><center>";
			print &signif($ncann[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumnc24 ne 0) {
		if (($nc24[$j] ne 0) && ($nc24[$j] ne "")) {
			print "<td $redflagnc24[$j]><center>";
			print &signif($nc24[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumnc1a ne 0) {
		if (($nc1a[$j] ne 0) && ($nc1a[$j] ne "")) {
			print "<td $redflagnc1a[$j]><center>";
			print &signif($nc1a[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}


	if ($sumnc1b ne 0) {
		if (($nc1b[$j] ne 0) && ($nc1b[$j] ne "")) {
			print "<td $redflagnc1a[$j]><center>";
			print &signif($nc1a[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}


	if ($sumaac ne 0) {
		if (($atsdrac[$j] ne 0) && ($atsdrac[$j] ne "")) {
			print "<td $redflagaa[$j]><center>";
			print &signif($atsdrac[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumaint ne 0) {
		if (($atsdrint[$j] ne 0) && ($atsdrint[$j] ne "")) {
			print "<td $redflagai[$j]><center>";
			print &signif($atsdrint[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	if ($sumachr ne 0) {
		if (($atsdrchr[$j] ne 0) && ($atsdrchr[$j] ne "")) {
			print "<td $redflagac[$j]><center>";
			print &signif($atsdrchr[$j]);
			print "</center></td>"; 
			}
		else {
			print "<td><center> --- </center></td>";
			}
		}

	print "</tr>";
  }
}

print "</table></center>";


print "<p><br><hr noshade width=65% align=center><br>";

}




# ****************************
# *** print disclaimer     ***
# ****************************

print "<p><br><br><br>";
print "<table border=1 cellpadding=10>";
print "<tr><td>";
print "<b>For more information about the standards and screening levels compiled here, or for ";
print "links to the sources of these levels, click ";
print "<a href=\"http://www.creativelement.com/~gwen/locsources.html\">here</a>.";
print "</td></tr>";
print "<tr><td bgcolor=\"#FF9966\"><b>";
print "Remember: The information on this site is not intended to be legal advice.  This information is not a substitute for the ";
print "advice of an attorney admitted to practice in the relevant jurisdiction.  Persons using this site should not take ";
print "or refrain from taking legal action based solely on information provided on this site or generated by using the ";
print "tools on this site.";
print "</b></td></tr></table>";

# ****************************
# *** print footer         ***
# ****************************

print "<p><br><hr noshade width=65% align=center><br>";
print "</font></center><p>";



exit;



# ****************************
# *** separate subroutines ***
# ****************************


sub convert2ppb {
	for ($j = 1; $j <= $number; $j++) {
		
		$_[$j] = $_[$j] * 0.8347;
		
	}
}

sub convert2ppbv {
	my @working;
	for ($j = 1; $j <= $number; $j++) {
		
		if ($MW[$j] ne "") {$working[$j] = $_[$j] * 24.04/ $MW[$j];}
	}
	return @working;
}


sub convertppb2ugm3 {
	for ($j = 1; $j <= $number; $j++) {
		
		$_[$j] = $_[$j] * 1.198;
		
	}
}


sub convertppbv2ugm3 {
	my @working;
	for ($j = 1; $j <= $number; $j++) {
		
		$working[$j] = $_[$j] * $MW[$j]/ 24.04;
	
	}
	return @working;
}



sub cleanup {
         $working = $_[0];
         $working = "\L$working";   # make it lower case
         $working =~ s/\s+$//;      # remove trailing spaces
         $working =~ s/^\s+//;      # remove leading spaces
         return $working;
}

#fixed and signif together round to 3 significant figures

sub fixed {
         $intpart = int($_[0]);
         $decpart = $_[0] - $intpart;
         $decpart = $decpart . "00000000000000000000000000000";
         $decpart = substr($decpart, 2, $_[1]);
         $final = "$intpart.$decpart";
         return $final;
}

sub signif {
            if ($_[0] > 10000000) { $working = &fixed ($_[0] / 100000, 0) * 100000; }
         elsif ($_[0] > 1000000) { $working = &fixed ($_[0] / 10000, 0) * 10000; }
         elsif ($_[0] > 100000) { $working = &fixed ($_[0] / 1000, 0) * 1000; }
         elsif ($_[0] > 10000) { $working = &fixed ($_[0]/ 100, 0)*100; }
         elsif ($_[0] > 1000) { $working = &fixed ($_[0]/ 10, 0)*10; }
         elsif ($_[0] > 100) { $working = &fixed ($_[0], 0) * 1; }
         elsif ($_[0] > 10) { $working = &fixed ($_[0], 1); }
         elsif ($_[0] > 1) { $working = &fixed ($_[0], 2); }
         elsif ($_[0] > 0.1) { $working = &fixed ($_[0], 3); }
         elsif ($_[0] > 0.01) { $working = &fixed ($_[0], 4); }
         elsif ($_[0] > 0.001) { $working = &fixed ($_[0], 5); }
         elsif ($_[0] > 0.0001) { $working = &fixed ($_[0], 6); }
         elsif ($_[0] > 0.00001) { $working = &fixed ($_[0], 7); }
         elsif ($_[0] > 0.000001) { $working = &fixed ($_[0], 8); }
         return $working;
}



